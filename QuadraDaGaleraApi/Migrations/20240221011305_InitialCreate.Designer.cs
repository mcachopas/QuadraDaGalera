// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuadraDaGaleraApi.infra;

#nullable disable

namespace QuadraDaGaleraApi.Migrations
{
    [DbContext(typeof(QuadraDaGaleraDbContext))]
    [Migration("20240221011305_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CEP")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Establishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CloseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OpeningTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SoccerFieldQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Establishments");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid?>("EstablishmentId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsCovered")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("NightLighting")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SurfacetType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdressId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsWhatsApp")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("MatchId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.HasIndex("MatchId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Establishment", b =>
                {
                    b.HasOne("QuadraDaGaleraApi.Dominio.Entidades.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Field", b =>
                {
                    b.HasOne("QuadraDaGaleraApi.Dominio.Entidades.Establishment", null)
                        .WithMany("Fields")
                        .HasForeignKey("EstablishmentId");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.User", b =>
                {
                    b.HasOne("QuadraDaGaleraApi.Dominio.Entidades.Address", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuadraDaGaleraApi.Dominio.Entidades.Match", null)
                        .WithMany("Players")
                        .HasForeignKey("MatchId");

                    b.Navigation("Adress");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Establishment", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("QuadraDaGaleraApi.Dominio.Entidades.Match", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
